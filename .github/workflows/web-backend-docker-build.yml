name: web-backend-docker-build

on:
  release:
    types: published

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: k1nd4sus/cerbero-backend
  BUILD_PATH: web/backend
  ARTIFACT_NAME: cerbero-backend
  WORKFLOW: web-backend-build.yml

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - amd64
          - arm64
    permissions:
      actions: read
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get the build
        uses: dawidd6/action-download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }} # artifact name
          path: ${{ env.BUILD_PATH }}/dist # the artifact is extracted into this directory
          workflow: ${{ env.WORKFLOW }}
          workflow_conclusion: success
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman qemu-user-static
      
      - name: Build image
        run: |
          cd ${{ env.BUILD_PATH }}
          podman build -t ${{ matrix.platform }} --arch ${{ matrix.platform }} .
          podman save -o ${{ matrix.platform }} ${{ matrix.platform }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: '${{ matrix.platform }}'
          path: ${{ env.BUILD_PATH }}/${{ matrix.platform }}
          if-no-files-found: error
          retention-days: 1


  push:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tags:
          - ${{ github.event.release.tag_name }}
          - latest
    steps:
      - name: Setup
        run: |
          sudo apt update
          sudo apt-get -y install podman qemu-user-static
      
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Registry login
        run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login -u ${{ github.actor }} --password-stdin ${{ env.REGISTRY }}

      - name: Create and push manifest
        run: |
          podman manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.tags }}
          podman manifest add create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.tags }} docker-archive:amd64
          podman manifest add create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.tags }} docker-archive:arm64
          podman manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.tags }}
          podman manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.tags }}